<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.VehicleAccessMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加车辆进出记录 -->
	<insert id="addVehicleAccess" parameterType="vehicleAccess">
		insert into t_vehicleAccess(carNo,inTime,inDoor,outTime,outDoor,stopTime,costFlag,costMoney,memo) values 
		(#{carNo},#{inTime},#{inDoor},#{outTime},#{outDoor},#{stopTime},#{costFlag},#{costMoney},#{memo})
	</insert>

	<!-- 按照查询条件分页查询车辆进出记录 -->
	<select id="queryVehicleAccess" resultMap="vehicleAccessMap" >
		select t_vehicleAccess.* from t_vehicleAccess ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="vehicleAccessMap" type="vehicleAccess">
        <id property="accessId" column="accessId" />
    </resultMap>

    <!-- 按照查询条件查询所有车辆进出记录 -->
	<select id="queryVehicleAccessList" resultMap="vehicleAccessMap" >
		select t_vehicleAccess.* from t_vehicleAccess ${where}
	</select>

    <!-- 按照查询条件的车辆进出记录数 -->
	<select id="queryVehicleAccessCount" resultType="int">
		select count(*) from t_vehicleAccess ${where}
	</select>

	<!-- 根据主键查询某个车辆进出记录 -->
	<select id="getVehicleAccess" parameterType="int" resultMap="vehicleAccessMap">
		select * from t_vehicleAccess where t_vehicleAccess.accessId = #{accessId}
	</select>

	<!-- 更新车辆进出记录 -->
	<update id="updateVehicleAccess" parameterType="vehicleAccess">
		update t_vehicleAccess set carNo=#{carNo},inTime=#{inTime},inDoor=#{inDoor},outTime=#{outTime},outDoor=#{outDoor},stopTime=#{stopTime},costFlag=#{costFlag},costMoney=#{costMoney},memo=#{memo} where accessId = #{accessId}
	</update>

	<!-- 删除车辆进出记录 -->
	<delete id="deleteVehicleAccess" parameterType="int">
		delete from t_vehicleAccess where accessId=#{accessId}
	</delete>

</mapper>
